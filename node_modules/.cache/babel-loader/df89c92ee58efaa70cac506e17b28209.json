{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\FullForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { StyledProduct } from \"./styles/Product.styled\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport Content from \"./Content\";\nimport CustomerForm from \"./CustomerForm\";\nimport Selections from \"./Selections\";\nimport { StyledForm } from \"./styles/Form.styled\"; // const schema = yup.object().shape({\n//   receiverName: yup.string().required(),\n//   currentCode: yup.string().required(),\n//   delivery: yup.string().required(),\n//   deliveryCode: yup.string().required(),\n//   seller: yup.string().required(),\n//   bank: yup.string().required(),\n//   paymentMethod: yup.string().required(),\n//   invoice: yup.number().positive().required(),\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FullForm() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({});\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"products\"\n  });\n\n  const submitForm = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(submitForm),\n    children: [/*#__PURE__*/_jsxDEV(StyledForm, {\n      children: /*#__PURE__*/_jsxDEV(CustomerForm, {\n        errors: errors,\n        register: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledProduct, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => append({}),\n        children: \"\\xDCr\\xFCn Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), fields.map((_ref, index) => {\n        let {\n          id\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Selections, {\n              errors: errors,\n              register: register,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [fields.map((_ref2, sub_index) => {\n              let {\n                sub_id\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Content, {\n                    register: register,\n                    sub_index: sub_index\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)\n              }, sub_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FullForm, \"QhtbyrMGikITqBS0Kznvx+1zo80=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = FullForm;\nexport default FullForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullForm\");","map":{"version":3,"names":["React","useState","useFieldArray","useForm","useWatch","yupResolver","yup","StyledProduct","Multiselect","Content","CustomerForm","Selections","StyledForm","FullForm","register","handleSubmit","control","formState","errors","fields","append","remove","name","submitForm","data","console","log","map","index","id","sub_index","sub_id"],"sources":["E:/Kodpit/kodpit/src/Components/FullForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { StyledProduct } from \"./styles/Product.styled\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Content from \"./Content\";\r\nimport CustomerForm from \"./CustomerForm\";\r\nimport Selections from \"./Selections\";\r\nimport { StyledForm } from \"./styles/Form.styled\";\r\n\r\n// const schema = yup.object().shape({\r\n//   receiverName: yup.string().required(),\r\n//   currentCode: yup.string().required(),\r\n//   delivery: yup.string().required(),\r\n//   deliveryCode: yup.string().required(),\r\n//   seller: yup.string().required(),\r\n//   bank: yup.string().required(),\r\n//   paymentMethod: yup.string().required(),\r\n//   invoice: yup.number().positive().required(),\r\n// });\r\n\r\nfunction FullForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({});\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"products\",\r\n  });\r\n\r\n  const submitForm = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(submitForm)}>\r\n      <StyledForm>\r\n        <CustomerForm errors={errors} register={register} />\r\n      </StyledForm>\r\n\r\n      <StyledProduct>\r\n        <button type=\"button\" onClick={() => append({})}>\r\n          Ürün Ekle\r\n        </button>\r\n\r\n        {fields.map(({ id }, index) => {\r\n          return (\r\n            <div key={id}>\r\n              <div>\r\n                <Selections errors={errors} register={register} index={index} />\r\n                \r\n              </div>\r\n              <div>\r\n                {fields.map(({ sub_id }, sub_index) => {\r\n                  return (\r\n                    <div key={sub_id}>\r\n                      <div>\r\n                        <Content register={register} sub_index={sub_index}/>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <button type=\"button\" onClick={() => remove(index)}>\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <input type=\"submit\" />\r\n      </StyledProduct>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FullForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,QAAiD,iBAAjD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,sBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,OAHI;IAIJC,SAAS,EAAE;MAAEC;IAAF;EAJP,IAKFf,OAAO,CAAC,EAAD,CALX;EAOA,MAAM;IAAEgB,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAA6BnB,aAAa,CAAC;IAC/Cc,OAD+C;IAE/CM,IAAI,EAAE;EAFyC,CAAD,CAAhD;;EAKA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IAC3BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACD,CAFD;;EAGA,oBACE;IAAM,QAAQ,EAAET,YAAY,CAACQ,UAAD,CAA5B;IAAA,wBACE,QAAC,UAAD;MAAA,uBACE,QAAC,YAAD;QAAc,MAAM,EAAEL,MAAtB;QAA8B,QAAQ,EAAEJ;MAAxC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,aAAD;MAAA,wBACE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAE,MAAMM,MAAM,CAAC,EAAD,CAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAKGD,MAAM,CAACQ,GAAP,CAAW,OAASC,KAAT,KAAmB;QAAA,IAAlB;UAAEC;QAAF,CAAkB;QAC7B,oBACE;UAAA,wBACE;YAAA,uBACE,QAAC,UAAD;cAAY,MAAM,EAAEX,MAApB;cAA4B,QAAQ,EAAEJ,QAAtC;cAAgD,KAAK,EAAEc;YAAvD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAKE;YAAA,WACGT,MAAM,CAACQ,GAAP,CAAW,QAAaG,SAAb,KAA2B;cAAA,IAA1B;gBAAEC;cAAF,CAA0B;cACrC,oBACE;gBAAA,uBACE;kBAAA,uBACE,QAAC,OAAD;oBAAS,QAAQ,EAAEjB,QAAnB;oBAA6B,SAAS,EAAEgB;kBAAxC;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA;cADF,GAAUC,MAAV;gBAAA;gBAAA;gBAAA;cAAA,QADF;YAOD,CARA,CADH,eAUE;cAAQ,IAAI,EAAC,QAAb;cAAsB,OAAO,EAAE,MAAMV,MAAM,CAACO,KAAD,CAA3C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAVF;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA,GAAUC,EAAV;UAAA;UAAA;UAAA;QAAA,QADF;MAsBD,CAvBA,CALH,eA8BE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QA9BF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwCD;;GAxDQhB,Q;UAMHV,O,EAE+BD,a;;;KAR5BW,Q;AA0DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}