{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\CostFooter.js\";\nimport React from 'react';\nimport { StyledCostFooter } from './styles/CostFooter.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CostFooter(_ref) {\n  let {\n    watchFields,\n    fields\n  } = _ref;\n  // console.log(fields.reduce(item => item.pricing.totalCost))\n  // console.log(fields.map(item => item.pricing.totalCost))\n  // console.log(fields.reduce((fullTotalCost, currentValue) => fullTotalCost + currentValue.pricing.totalCost,0))\n  return /*#__PURE__*/_jsxDEV(StyledCostFooter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"TOPLAM TUTAR:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fields.map(item => {\n        return item.pricing.totalCost, item.pricing.currencyUnit;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fields.map(item => item.pricing.currencyUnit)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CostFooter;\nexport default CostFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CostFooter\");","map":{"version":3,"names":["React","StyledCostFooter","CostFooter","watchFields","fields","map","item","pricing","totalCost","currencyUnit"],"sources":["E:/Kodpit/kodpit/src/Components/CostFooter.js"],"sourcesContent":["import React from 'react'\r\nimport { StyledCostFooter } from './styles/CostFooter.styled'\r\n\r\nfunction CostFooter({watchFields, fields}) {\r\n\r\n    \r\n    // console.log(fields.reduce(item => item.pricing.totalCost))\r\n    \r\n    // console.log(fields.map(item => item.pricing.totalCost))\r\n    // console.log(fields.reduce((fullTotalCost, currentValue) => fullTotalCost + currentValue.pricing.totalCost,0))\r\n\r\n  return (\r\n    <StyledCostFooter>\r\n       <div>TOPLAM TUTAR:</div>\r\n       <div>{fields.map(item => {return (item.pricing.totalCost, item.pricing.currencyUnit)})}</div>\r\n       <div>{fields.map(item => item.pricing.currencyUnit)}</div>\r\n    </StyledCostFooter>\r\n    \r\n  )\r\n}\r\nexport default CostFooter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;;AAEA,SAASC,UAAT,OAA2C;EAAA,IAAvB;IAACC,WAAD;IAAcC;EAAd,CAAuB;EAGvC;EAEA;EACA;EAEF,oBACE,QAAC,gBAAD;IAAA,wBACG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAA,UAAMA,MAAM,CAACC,GAAP,CAAWC,IAAI,IAAI;QAAC,OAAQA,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwBF,IAAI,CAACC,OAAL,CAAaE,YAA7C;MAA2D,CAA/E;IAAN;MAAA;MAAA;MAAA;IAAA,QAFH,eAGG;MAAA,UAAML,MAAM,CAACC,GAAP,CAAWC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAaE,YAAhC;IAAN;MAAA;MAAA;MAAA;IAAA,QAHH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;KAhBQP,U;AAiBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}