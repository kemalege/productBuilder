{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\CustomDropdown.js\";\nimport React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CustomDropdown(_ref) {\n  let {\n    registerName,\n    control,\n    options,\n    placeholder,\n    errors,\n    errorMessage,\n    index\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputDiv\",\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      name: registerName,\n      rules: {\n        required: `${errorMessage}`,\n        min: 20\n      },\n      control: control,\n      render: _ref2 => {\n        var _errors$products, _errors$products$inde, _errors$products$inde2;\n\n        let {\n          field: {\n            onChange,\n            value,\n            ref\n          }\n        } = _ref2;\n        const currentSelection = options.find(o => o.value === value);\n\n        const handleSelectChange = selectedOption => {\n          onChange(selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value);\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            value: currentSelection,\n            options: options,\n            onChange: handleSelectChange,\n            type: \"text\",\n            placeholder: placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_errors$products = errors.products) === null || _errors$products === void 0 ? void 0 : (_errors$products$inde = _errors$products[index]) === null || _errors$products$inde === void 0 ? void 0 : (_errors$products$inde2 = _errors$products$inde.brand) === null || _errors$products$inde2 === void 0 ? void 0 : _errors$products$inde2.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomDropdown;\nexport default CustomDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["React","Controller","useForm","Select","CustomDropdown","registerName","control","options","placeholder","errors","errorMessage","index","required","min","field","onChange","value","ref","currentSelection","find","o","handleSelectChange","selectedOption","products","brand","message"],"sources":["E:/Kodpit/kodpit/src/Components/CustomDropdown.js"],"sourcesContent":["import React from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\n\r\nfunction CustomDropdown({ registerName, control, options, placeholder, errors, errorMessage,index}) {\r\n  return (\r\n    <div className=\"inputDiv\">\r\n        \r\n      <Controller\r\n        name={registerName}\r\n        rules={{required: `${errorMessage}`, min: 20}}\r\n        control={control}\r\n        render={({ field: { onChange, value, ref } }) => {\r\n          const currentSelection = options.find((o) => o.value === value);\r\n          const handleSelectChange = (selectedOption) => {\r\n            onChange(selectedOption?.value);\r\n          };\r\n          return (\r\n            <>\r\n            <Select\r\n              value={currentSelection}\r\n              options={options}\r\n              onChange={handleSelectChange}\r\n              type=\"text\"\r\n              placeholder={placeholder}             \r\n            />\r\n            <p>{errors.products?.[index]?.brand?.message}</p>\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomDropdown;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,SAASC,cAAT,OAAoG;EAAA,IAA5E;IAAEC,YAAF;IAAgBC,OAAhB;IAAyBC,OAAzB;IAAkCC,WAAlC;IAA+CC,MAA/C;IAAuDC,YAAvD;IAAoEC;EAApE,CAA4E;EAClG,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uBAEE,QAAC,UAAD;MACE,IAAI,EAAEN,YADR;MAEE,KAAK,EAAE;QAACO,QAAQ,EAAG,GAAEF,YAAa,EAA3B;QAA8BG,GAAG,EAAE;MAAnC,CAFT;MAGE,OAAO,EAAEP,OAHX;MAIE,MAAM,EAAE,SAAyC;QAAA;;QAAA,IAAxC;UAAEQ,KAAK,EAAE;YAAEC,QAAF;YAAYC,KAAZ;YAAmBC;UAAnB;QAAT,CAAwC;QAC/C,MAAMC,gBAAgB,GAAGX,OAAO,CAACY,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACJ,KAAF,KAAYA,KAAhC,CAAzB;;QACA,MAAMK,kBAAkB,GAAIC,cAAD,IAAoB;UAC7CP,QAAQ,CAACO,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEN,KAAjB,CAAR;QACD,CAFD;;QAGA,oBACE;UAAA,wBACA,QAAC,MAAD;YACE,KAAK,EAAEE,gBADT;YAEE,OAAO,EAAEX,OAFX;YAGE,QAAQ,EAAEc,kBAHZ;YAIE,IAAI,EAAC,MAJP;YAKE,WAAW,EAAEb;UALf;YAAA;YAAA;YAAA;UAAA,QADA,eAQA;YAAA,8BAAIC,MAAM,CAACc,QAAX,8EAAI,iBAAkBZ,KAAlB,CAAJ,oFAAI,sBAA0Ba,KAA9B,2DAAI,uBAAiCC;UAArC;YAAA;YAAA;YAAA;UAAA,QARA;QAAA,gBADF;MAYD;IArBH;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;KA9BQrB,c;AAgCT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}