{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\Textures.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport CustomDropdown from \"./CustomDropdown\";\nimport TextureItems from \"./TextureItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Textures(_ref) {\n  _s();\n\n  let {\n    register,\n    index,\n    errors,\n    control\n  } = _ref;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: `products[${index}].textures`\n  }); // const registerName = `products[${index}].textures.[${sub_index}]`;\n\n  const groupDataOptions = [{\n    value: \"Grup Bir\",\n    label: \"Grup Bir\"\n  }, {\n    value: \"Grup İki\",\n    label: \"Grup İki\"\n  }, {\n    value: \"Grup Üç\",\n    label: \"Grup Üç\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => append({}),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), fields.map((_ref2, sub_index) => {\n      let {\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"removeButton\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(sub_index),\n              children: \"Sil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextureItems, {\n            index: index,\n            control: control,\n            errors: errors,\n            sub_index: sub_index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Textures, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = Textures;\nexport default Textures;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textures\");","map":{"version":3,"names":["React","useFieldArray","CustomDropdown","TextureItems","Textures","register","index","errors","control","fields","append","remove","name","groupDataOptions","value","label","map","sub_index","id"],"sources":["E:/Kodpit/kodpit/src/Components/Textures.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport CustomDropdown from \"./CustomDropdown\";\r\nimport TextureItems from \"./TextureItems\";\r\n\r\nfunction Textures({\r\n  register,\r\n  index,\r\n  errors,\r\n  control,\r\n}) {\r\n  \r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: `products[${index}].textures`,\r\n  });\r\n\r\n  // const registerName = `products[${index}].textures.[${sub_index}]`;\r\n  const groupDataOptions = [\r\n    { value: \"Grup Bir\", label: \"Grup Bir\" },\r\n    { value: \"Grup İki\", label: \"Grup İki\" },\r\n    { value: \"Grup Üç\", label: \"Grup Üç\" },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n        <button type=\"button\" onClick={() => append({})}>+</button>\r\n      {fields.map(({ id }, sub_index) => {\r\n        return (\r\n          <div key={id}>\r\n            <div>\r\n              <div className=\"removeButton\">\r\n                <button type=\"button\" onClick={() => remove(sub_index)}>\r\n                  Sil\r\n                </button>\r\n              </div>\r\n              <TextureItems index={index} control={control} errors={errors} sub_index={sub_index}/>\r\n            </div>\r\n\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport default Textures;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,QAAT,OAKG;EAAA;;EAAA,IALe;IAChBC,QADgB;IAEhBC,KAFgB;IAGhBC,MAHgB;IAIhBC;EAJgB,CAKf;EAED,MAAM;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAA6BV,aAAa,CAAC;IAC/CO,OAD+C;IAE/CI,IAAI,EAAG,YAAWN,KAAM;EAFuB,CAAD,CAAhD,CAFC,CAOD;;EACA,MAAMO,gBAAgB,GAAG,CACvB;IAAEC,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CADuB,EAEvB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAFuB,EAGvB;IAAED,KAAK,EAAE,SAAT;IAAoBC,KAAK,EAAE;EAA3B,CAHuB,CAAzB;EAMA,oBACE;IAAA,wBACI;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAML,MAAM,CAAC,EAAD,CAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEGD,MAAM,CAACO,GAAP,CAAW,QAASC,SAAT,KAAuB;MAAA,IAAtB;QAAEC;MAAF,CAAsB;MACjC,oBACE;QAAA,uBACE;UAAA,wBACE;YAAK,SAAS,EAAC,cAAf;YAAA,uBACE;cAAQ,IAAI,EAAC,QAAb;cAAsB,OAAO,EAAE,MAAMP,MAAM,CAACM,SAAD,CAA3C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAME,QAAC,YAAD;YAAc,KAAK,EAAEX,KAArB;YAA4B,OAAO,EAAEE,OAArC;YAA8C,MAAM,EAAED,MAAtD;YAA8D,SAAS,EAAEU;UAAzE;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAUC,EAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAaD,CAdA,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAvCQd,Q;UAO4BH,a;;;KAP5BG,Q;AAwCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}