{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\CustomInput.js\";\nimport React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { StyledErrorMessage } from \"./styles/ErrorMessage.styled\";\nimport { OnlyNumber } from \"../utils/OnlyNumber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CustomInput(_ref) {\n  let {\n    registerName,\n    control,\n    placeholder,\n    errorMessage,\n    type,\n    defaultValue,\n    readOnly,\n    errors,\n    validationMessage\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: registerName,\n    rules: {\n      required: `${errorMessage}`,\n      min: {\n        value: 1,\n        message: validationMessage ? `${validationMessage}` : \" \"\n      }\n    },\n    control: control,\n    render: _ref2 => {\n      let {\n        field: {\n          onChange,\n          value,\n          ref\n        }\n      } = _ref2;\n\n      const handleSelectChange = e => {\n        var _e$target;\n\n        onChange((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n      };\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: type,\n          onChange: handleSelectChange,\n          value: value,\n          defaultValue: defaultValue,\n          placeholder: placeholder,\n          name: registerName,\n          readOnly: readOnly,\n          onKeyDown: event => {\n            OnlyNumber(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"names":["React","Controller","useForm","Select","ErrorMessage","StyledErrorMessage","OnlyNumber","CustomInput","registerName","control","placeholder","errorMessage","type","defaultValue","readOnly","errors","validationMessage","required","min","value","message","field","onChange","ref","handleSelectChange","e","target","event"],"sources":["E:/Kodpit/kodpit/src/Components/CustomInput.js"],"sourcesContent":["import React from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { StyledErrorMessage } from \"./styles/ErrorMessage.styled\";\r\nimport { OnlyNumber} from \"../utils/OnlyNumber\"\r\n\r\nfunction CustomInput({registerName, control,placeholder, errorMessage,\r\n  type, defaultValue, readOnly, errors, validationMessage}) {   \r\n\r\n  return (\r\n    <Controller\r\n      name={registerName}\r\n      rules={{ required: `${errorMessage}` , min: {\r\n        value: 1,\r\n        message:  validationMessage ? `${validationMessage}`: \" \"\r\n      }}}\r\n      control={control}\r\n      render={({ field: { onChange, value, ref } }) => {\r\n        \r\n        const handleSelectChange = (e) => {\r\n          onChange(e.target?.value);\r\n        };\r\n        \r\n        return (\r\n          <>\r\n            <input\r\n              type={type}\r\n              onChange={handleSelectChange}\r\n              value={value}\r\n              defaultValue={defaultValue}\r\n              placeholder={placeholder}\r\n              name={registerName}\r\n              readOnly = {readOnly}\r\n              onKeyDown={(event) => { OnlyNumber(event)}}\r\n              \r\n            />\r\n            {/* <ErrorMessage\r\n                errors={errors}\r\n                name={registerName}\r\n                render={({ message }) => <StyledErrorMessage>{message}</StyledErrorMessage>}\r\n              /> */}\r\n          </>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default CustomInput;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,UAAT,QAA0B,qBAA1B;;;;AAEA,SAASC,WAAT,OAC4D;EAAA,IADvC;IAACC,YAAD;IAAeC,OAAf;IAAuBC,WAAvB;IAAoCC,YAApC;IACnBC,IADmB;IACbC,YADa;IACCC,QADD;IACWC,MADX;IACmBC;EADnB,CACuC;EAE1D,oBACE,QAAC,UAAD;IACE,IAAI,EAAER,YADR;IAEE,KAAK,EAAE;MAAES,QAAQ,EAAG,GAAEN,YAAa,EAA5B;MAAgCO,GAAG,EAAE;QAC1CC,KAAK,EAAE,CADmC;QAE1CC,OAAO,EAAGJ,iBAAiB,GAAI,GAAEA,iBAAkB,EAAxB,GAA2B;MAFZ;IAArC,CAFT;IAME,OAAO,EAAEP,OANX;IAOE,MAAM,EAAE,SAAyC;MAAA,IAAxC;QAAEY,KAAK,EAAE;UAAEC,QAAF;UAAYH,KAAZ;UAAmBI;QAAnB;MAAT,CAAwC;;MAE/C,MAAMC,kBAAkB,GAAIC,CAAD,IAAO;QAAA;;QAChCH,QAAQ,cAACG,CAAC,CAACC,MAAH,8CAAC,UAAUP,KAAX,CAAR;MACD,CAFD;;MAIA,oBACE;QAAA,uBACE;UACE,IAAI,EAAEP,IADR;UAEE,QAAQ,EAAEY,kBAFZ;UAGE,KAAK,EAAEL,KAHT;UAIE,YAAY,EAAEN,YAJhB;UAKE,WAAW,EAAEH,WALf;UAME,IAAI,EAAEF,YANR;UAOE,QAAQ,EAAIM,QAPd;UAQE,SAAS,EAAGa,KAAD,IAAW;YAAErB,UAAU,CAACqB,KAAD,CAAV;UAAkB;QAR5C;UAAA;UAAA;UAAA;QAAA;MADF,iBADF;IAoBD;EAjCH;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD;;KAxCQpB,W;AAyCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}