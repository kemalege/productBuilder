{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\CostFooter.js\";\nimport React from \"react\";\nimport { StyledCostFooter } from \"./styles/CostFooter.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CostFooter(_ref) {\n  let {\n    watchFields,\n    fields\n  } = _ref;\n  // console.log(fields.reduce((acc,item) => acc + item.pricing.cost,0))\n  // console.log(fields.map(item => (item.pricing.currencyUnit.indexOf(item.pricing.currencyUnit))))\n  // const new_field=fields.map((item)=> (fields.map((loop_item)=>loop_item.pricing.currencyUnit === item.pricing.currencyUnit && item.pricing.cost + loop_item.pricing.cost)))\n  // console.log(\n  //       fields.reduce( \n  //         (acc, curr) =>  curr.pricing.currencyUnit === \"TL\" &&\n  //        acc + curr.pricing.cost,0)\n  //   )\n  const tlsum = fields.map(item => item.pricing.currencyUnit === \"TL\" ? item.pricing.cost : \"\");\n  const sum = tlsum.reduce((acc, curr) => acc + curr);\n  console.log(sum); // console.log(fields.reduce((fullTotalCost, currentValue) => fullTotalCost + fields.map(item => item.pricing.currencyUnit ===  currentValue.pricing.currencyUnit && currentValue.pricing.currencyUnit ),0))\n  // console.log(fields.reduce((fullTotalCost, currentValue) => fullTotalCost + currentValue.pricing.totalCost,0))\n\n  return /*#__PURE__*/_jsxDEV(StyledCostFooter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"TOPLAM TUTAR:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), fields.reduce((fullCost, loop_item) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: loop_item.pricing.currencyUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: fields.map(item => loop_item.pricing.currencyUnit === item.pricing.currencyUnit) && fullCost + loop_item.pricing.cost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CostFooter;\nexport default CostFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CostFooter\");","map":{"version":3,"names":["React","StyledCostFooter","CostFooter","watchFields","fields","tlsum","map","item","pricing","currencyUnit","cost","sum","reduce","acc","curr","console","log","fullCost","loop_item"],"sources":["E:/Kodpit/kodpit/src/Components/CostFooter.js"],"sourcesContent":["import React from \"react\";\r\nimport { StyledCostFooter } from \"./styles/CostFooter.styled\";\r\n\r\nfunction CostFooter({ watchFields, fields }) {\r\n  // console.log(fields.reduce((acc,item) => acc + item.pricing.cost,0))\r\n  // console.log(fields.map(item => (item.pricing.currencyUnit.indexOf(item.pricing.currencyUnit))))\r\n  // const new_field=fields.map((item)=> (fields.map((loop_item)=>loop_item.pricing.currencyUnit === item.pricing.currencyUnit && item.pricing.cost + loop_item.pricing.cost)))\r\n  // console.log(\r\n  //       fields.reduce( \r\n  //         (acc, curr) =>  curr.pricing.currencyUnit === \"TL\" &&\r\n  //        acc + curr.pricing.cost,0)\r\n  //   )\r\n  const tlsum = fields.map(item => item.pricing.currencyUnit === \"TL\" ? item.pricing.cost : \"\")\r\n  const sum = tlsum.reduce((acc,curr) => acc+ curr)\r\n  console.log(sum)\r\n    \r\n\r\n\r\n        \r\n  // console.log(fields.reduce((fullTotalCost, currentValue) => fullTotalCost + fields.map(item => item.pricing.currencyUnit ===  currentValue.pricing.currencyUnit && currentValue.pricing.currencyUnit ),0))\r\n\r\n  // console.log(fields.reduce((fullTotalCost, currentValue) => fullTotalCost + currentValue.pricing.totalCost,0))\r\n  return (\r\n    <StyledCostFooter>\r\n      <div>TOPLAM TUTAR:</div>\r\n      {/* <div>{fields.map((acc,cur) => {return acc.concat(cur.pricing.totalCost,\" \",cur.pricing.currencyUnit,\" + \")},[])}</div> */}\r\n\r\n      {/* {fields.map(\r\n        (item, index) => \r\n            (\r\n            <div key={index}>\r\n              <div>\r\n                {item.pricing.totalCost}\r\n                {` ${item.pricing.currencyUnit}`}\r\n              </div>\r\n              <div>{fields[index + 1]?.pricing.currencyUnit && `+`}</div>\r\n            </div>\r\n          )\r\n      )} */}\r\n      {fields.reduce((fullCost, loop_item) => (\r\n        <>\r\n          <div>{loop_item.pricing.currencyUnit}</div>\r\n          <div>\r\n            {fields.map(\r\n              (item) =>\r\n                loop_item.pricing.currencyUnit === item.pricing.currencyUnit\r\n            ) && fullCost + loop_item.pricing.cost}\r\n          </div>\r\n        </>\r\n      ))}\r\n    </StyledCostFooter>\r\n  );\r\n}\r\nexport default CostFooter;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;;;AAEA,SAASC,UAAT,OAA6C;EAAA,IAAzB;IAAEC,WAAF;IAAeC;EAAf,CAAyB;EAC3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAWC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAaC,YAAb,KAA8B,IAA9B,GAAqCF,IAAI,CAACC,OAAL,CAAaE,IAAlD,GAAyD,EAA5E,CAAd;EACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa,CAACC,GAAD,EAAKC,IAAL,KAAcD,GAAG,GAAEC,IAAhC,CAAZ;EACAC,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAX2C,CAgB3C;EAEA;;EACA,oBACE,QAAC,gBAAD;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAgBGP,MAAM,CAACQ,MAAP,CAAc,CAACK,QAAD,EAAWC,SAAX,kBACb;MAAA,wBACE;QAAA,UAAMA,SAAS,CAACV,OAAV,CAAkBC;MAAxB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGL,MAAM,CAACE,GAAP,CACEC,IAAD,IACEW,SAAS,CAACV,OAAV,CAAkBC,YAAlB,KAAmCF,IAAI,CAACC,OAAL,CAAaC,YAFnD,KAGIQ,QAAQ,GAAGC,SAAS,CAACV,OAAV,CAAkBE;MAJpC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADD,CAhBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;KAjDQR,U;AAkDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}