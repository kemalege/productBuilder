{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\FullForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { StyledProduct } from \"./styles/Product.styled\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport Content from \"./Content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({});\n\nfunction Selections() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"products\"\n  });\n\n  const submitForm = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledProduct, {\n    onSubmit: handleSubmit(submitForm),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => append({}),\n      children: \"\\xDCr\\xFCn Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), fields.map((_ref, index) => {\n      var _errors$receiverName;\n\n      let {\n        id,\n        brand,\n        size,\n        productType,\n        contents,\n        packageType\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"text\",\n            ...register(`products.[${index}].brand`),\n            placeholder: \"Al\\u0131c\\u0131 ad\\u0131...\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Marka 1\",\n              children: \"Marka 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Marka 2\",\n              children: \"Marka 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Marka 3\",\n              children: \"Marka 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ((_errors$receiverName = errors.receiverName) === null || _errors$receiverName === void 0 ? void 0 : _errors$receiverName.type) === \"required\" && \"Marka seçimi gerekli!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Selections, \"QhtbyrMGikITqBS0Kznvx+1zo80=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = Selections;\nexport default Selections;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selections\");","map":{"version":3,"names":["React","useState","useFieldArray","useForm","useWatch","yupResolver","yup","StyledProduct","Multiselect","Content","schema","object","shape","Selections","register","handleSubmit","control","formState","errors","resolver","fields","append","remove","name","submitForm","data","console","log","map","index","id","brand","size","productType","contents","packageType","receiverName","type"],"sources":["E:/Kodpit/kodpit/src/Components/FullForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { StyledProduct } from \"./styles/Product.styled\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Content from \"./Content\";\r\n\r\nconst schema = yup.object().shape({});\r\n\r\nfunction Selections() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"products\",\r\n  });\r\n\r\n  const submitForm = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <StyledProduct onSubmit={handleSubmit(submitForm)}>\r\n      <button type=\"button\" onClick={() => append({})}>\r\n        Ürün Ekle\r\n      </button>\r\n\r\n      {fields.map(\r\n        ({ id, brand, size, productType, contents, packageType }, index) => {\r\n          return (\r\n            <div key={id}>\r\n              \r\n              \r\n              <div>\r\n                <select\r\n                  type=\"text\"\r\n                  {...register(`products.[${index}].brand`)}\r\n                  placeholder=\"Alıcı adı...\"\r\n                >\r\n                  <option value=\"Marka 1\">Marka 1</option>\r\n                  <option value=\"Marka 2\">Marka 2</option>\r\n                  <option value=\"Marka 3\">Marka 3</option>\r\n                </select>\r\n                <p>\r\n                  {errors.receiverName?.type === \"required\" &&\r\n                    \"Marka seçimi gerekli!\"}\r\n                </p>\r\n              </div>\r\n              \r\n              \r\n              \r\n            </div>\r\n          );\r\n        }\r\n      )}\r\n      \r\n      <input type=\"submit\" />\r\n    </StyledProduct>\r\n  );\r\n}\r\n\r\nexport default Selections;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,QAAiD,iBAAjD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB,EAAnB,CAAf;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,OAHI;IAIJC,SAAS,EAAE;MAAEC;IAAF;EAJP,IAKFf,OAAO,CAAC;IACVgB,QAAQ,EAAEd,WAAW,CAACK,MAAD;EADX,CAAD,CALX;EAWA,MAAM;IAAEU,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAA6BpB,aAAa,CAAC;IAC/Cc,OAD+C;IAE/CO,IAAI,EAAE;EAFyC,CAAD,CAAhD;;EAKA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IAC3BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACD,CAFD;;EAGA,oBACE,QAAC,aAAD;IAAe,QAAQ,EAAEV,YAAY,CAACS,UAAD,CAArC;IAAA,wBACE;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAMH,MAAM,CAAC,EAAD,CAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAKGD,MAAM,CAACQ,GAAP,CACC,OAA0DC,KAA1D,KAAoE;MAAA;;MAAA,IAAnE;QAAEC,EAAF;QAAMC,KAAN;QAAaC,IAAb;QAAmBC,WAAnB;QAAgCC,QAAhC;QAA0CC;MAA1C,CAAmE;MAClE,oBACE;QAAA,uBAGE;UAAA,wBACE;YACE,IAAI,EAAC,MADP;YAAA,GAEMrB,QAAQ,CAAE,aAAYe,KAAM,SAApB,CAFd;YAGE,WAAW,EAAC,6BAHd;YAAA,wBAKE;cAAQ,KAAK,EAAC,SAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF,eAME;cAAQ,KAAK,EAAC,SAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QANF,eAOE;cAAQ,KAAK,EAAC,SAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAPF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAUE;YAAA,UACG,yBAAAX,MAAM,CAACkB,YAAP,8EAAqBC,IAArB,MAA8B,UAA9B,IACC;UAFJ;YAAA;YAAA;YAAA;UAAA,QAVF;QAAA;UAAA;UAAA;UAAA;QAAA;MAHF,GAAUP,EAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAwBD,CA1BF,CALH,eAkCE;MAAO,IAAI,EAAC;IAAZ;MAAA;MAAA;MAAA;IAAA,QAlCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD;;GA1DQjB,U;UAMHV,O,EAM+BD,a;;;KAZ5BW,U;AA4DT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}