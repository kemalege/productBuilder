{"ast":null,"code":"var _jsxFileName = \"E:\\\\alternet\\\\alternet\\\\src\\\\Components\\\\Product.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { StyledProduct } from \"./styles/Product.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Price = _ref => {\n  _s();\n\n  let {\n    control,\n    index\n  } = _ref;\n  const value = useWatch({\n    control,\n    name: `products[${index}]`,\n    defaultvalue: {}\n  });\n  console.log(value);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: (value.type || 0) * (value.amount || 0)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Price, \"dmRVm/B8WBSId4WxoCuImYgaXlQ=\", false, function () {\n  return [useWatch];\n});\n\n_c = Price;\nconst schema = yup.object().shape({// name: yup.string().required(),\n  // amount: yup.number().required()\n});\n\nfunction Form() {\n  _s2();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"products\"\n  });\n  console.log(\"render...\");\n\n  const submitForm = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledProduct, {\n    onSubmit: handleSubmit(submitForm),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => append({}),\n      children: \"\\xDCr\\xFCn Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), fields.map((_ref2, index) => {\n      var _errors$receiverName;\n\n      let {\n        id,\n        name,\n        amount\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(`products.[${index}].name`),\n          placeholder: \"Al\\u0131c\\u0131 ad\\u0131...\",\n          defaultValue: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ((_errors$receiverName = errors.receiverName) === null || _errors$receiverName === void 0 ? void 0 : _errors$receiverName.type) === \"required\" && \"Alıcı adı gerekli!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(`products.[${index}].amount`),\n              placeholder: \"say\\u0131\",\n              defaultValue: amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.deliveryCode && \"Teslim için Özel Kod gerekli!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Price, {\n          control: control,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => remove(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Form, \"RrulTXjGuIcvTaqUphQo6mC5Rl8=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c2 = Form;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Price\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"names":["React","useFieldArray","useForm","useWatch","yupResolver","yup","StyledProduct","Price","control","index","value","name","defaultvalue","console","log","type","amount","schema","object","shape","Form","register","handleSubmit","watch","formState","errors","resolver","fields","append","remove","submitForm","data","map","id","receiverName","deliveryCode"],"sources":["E:/alternet/alternet/src/Components/Product.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { StyledProduct } from \"./styles/Product.styled\";\r\n\r\nconst Price = ({control, index}) => {\r\n  const value = useWatch({\r\n    control,\r\n    name: `products[${index}]`,\r\n    defaultvalue: {}\r\n  })\r\n  console.log(value);\r\n  return <span>{(value.type || 0) * (value.amount || 0)}</span>\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    // name: yup.string().required(),\r\n    // amount: yup.number().required()\r\n});\r\n\r\nfunction Form() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"products\",\r\n  });\r\n\r\n  console.log(\"render...\");\r\n\r\n  const submitForm = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <StyledProduct onSubmit={handleSubmit(submitForm)}>\r\n      <button type=\"button\" onClick={() => append({})}>\r\n        Ürün Ekle\r\n      </button>\r\n\r\n      {fields.map(({ id, name, amount }, index) => {\r\n        return (\r\n          <div key={id}>\r\n            \r\n            <input\r\n              type=\"text\"\r\n              {...register(`products.[${index}].name`)}\r\n              placeholder=\"Alıcı adı...\"\r\n              defaultValue={name}\r\n            />\r\n            <p>\r\n              {errors.receiverName?.type === \"required\" && \"Alıcı adı gerekli!\"}\r\n            </p>\r\n            <div>\r\n              {\" \"}\r\n              <div>\r\n                <input\r\n                  {...register(`products.[${index}].amount`)}\r\n                  placeholder=\"sayı\"\r\n                  defaultValue={amount}\r\n                />\r\n                <p>{errors.deliveryCode && \"Teslim için Özel Kod gerekli!\"}</p>\r\n              </div>\r\n            </div>\r\n            <Price control={control} index={index}/>\r\n            <button type=\"button\" onClick={() => remove(index)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n      <input type=\"submit\" />\r\n    </StyledProduct>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}