{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\Product.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport Content from \"./Content\";\nimport Selections from \"./Selections\";\nimport { StyledProduct } from \"./styles/Product.styled\";\nimport Textures from \"./Textures\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Product(_ref) {\n  _s();\n\n  let {\n    control,\n    index,\n    register,\n    submitCount,\n    errors\n  } = _ref;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: `products[${index}].content`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Selections, {\n      register: register,\n      control: control,\n      errors: errors,\n      append: append,\n      fields: fields,\n      index: index,\n      remove: remove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fields.map((field, sub_index) => {\n        return /*#__PURE__*/_jsxDEV(Content, {\n          selectedItem: field,\n          control: control,\n          index: index,\n          sub_index: sub_index,\n          register: register,\n          errors: errors\n        }, field.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textures, {\n      register: register,\n      control: control,\n      errors: errors,\n      append: append,\n      fields: fields,\n      index: index,\n      remove: remove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Product, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useFieldArray","useForm","useWatch","Content","Selections","StyledProduct","Textures","Product","control","index","register","submitCount","errors","fields","append","remove","name","map","field","sub_index","id"],"sources":["E:/Kodpit/kodpit/src/Components/Product.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFieldArray, useForm, useWatch } from \"react-hook-form\";\r\nimport Content from \"./Content\";\r\nimport Selections from \"./Selections\";\r\nimport { StyledProduct } from \"./styles/Product.styled\";\r\nimport Textures from \"./Textures\";\r\n\r\nfunction Product({ control, index, register, submitCount, errors }) {\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: `products[${index}].content`,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Selections\r\n        register={register}\r\n        control={control}\r\n        errors={errors}\r\n        append={append}\r\n        fields={fields}\r\n        index={index}\r\n        remove={remove}\r\n      />\r\n\r\n      <div>\r\n        {fields.map((field, sub_index) => {\r\n          return (\r\n            <Content\r\n              selectedItem={field}\r\n              control={control}\r\n              index={index}\r\n              sub_index={sub_index}\r\n              register={register}\r\n              errors={errors}\r\n              key={field.id}\r\n            />\r\n          );\r\n        })}\r\n        \r\n      </div>\r\n      <Textures\r\n          register={register}\r\n          control={control}\r\n          errors={errors}\r\n          append={append}\r\n          fields={fields}\r\n          index={index}\r\n          remove={remove}\r\n        \r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,QAAiD,iBAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,OAAT,OAAoE;EAAA;;EAAA,IAAnD;IAAEC,OAAF;IAAWC,KAAX;IAAkBC,QAAlB;IAA4BC,WAA5B;IAAyCC;EAAzC,CAAmD;EAClE,MAAM;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAA6Bf,aAAa,CAAC;IAC/CQ,OAD+C;IAE/CQ,IAAI,EAAG,YAAWP,KAAM;EAFuB,CAAD,CAAhD;EAKA,oBACE;IAAA,wBACE,QAAC,UAAD;MACE,QAAQ,EAAEC,QADZ;MAEE,OAAO,EAAEF,OAFX;MAGE,MAAM,EAAEI,MAHV;MAIE,MAAM,EAAEE,MAJV;MAKE,MAAM,EAAED,MALV;MAME,KAAK,EAAEJ,KANT;MAOE,MAAM,EAAEM;IAPV;MAAA;MAAA;MAAA;IAAA,QADF,eAWE;MAAA,UACGF,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,SAAR,KAAsB;QAChC,oBACE,QAAC,OAAD;UACE,YAAY,EAAED,KADhB;UAEE,OAAO,EAAEV,OAFX;UAGE,KAAK,EAAEC,KAHT;UAIE,SAAS,EAAEU,SAJb;UAKE,QAAQ,EAAET,QALZ;UAME,MAAM,EAAEE;QANV,GAOOM,KAAK,CAACE,EAPb;UAAA;UAAA;UAAA;QAAA,QADF;MAWD,CAZA;IADH;MAAA;MAAA;MAAA;IAAA,QAXF,eA2BE,QAAC,QAAD;MACI,QAAQ,EAAEV,QADd;MAEI,OAAO,EAAEF,OAFb;MAGI,MAAM,EAAEI,MAHZ;MAII,MAAM,EAAEE,MAJZ;MAKI,MAAM,EAAED,MALZ;MAMI,KAAK,EAAEJ,KANX;MAOI,MAAM,EAAEM;IAPZ;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA,gBADF;AAwCD;;GA9CQR,O;UAC4BP,a;;;KAD5BO,O;AAgDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}