{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\Textures.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport CustomDropdown from \"./CustomDropdown\";\nimport { StyledTexture } from \"./styles/Texture.styled\";\nimport TextureItems from \"./TextureItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Textures(_ref) {\n  _s();\n\n  let {\n    register,\n    index,\n    errors,\n    control\n  } = _ref;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: `products[${index}].textures`\n  });\n  return /*#__PURE__*/_jsxDEV(StyledTexture, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => append({}),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), fields.map((_ref2, sub_index) => {\n        let {\n          id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(sub_index),\n              children: \"Sil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextureItems, {\n            index: index,\n            control: control,\n            errors: errors,\n            sub_index: sub_index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Textures, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = Textures;\nexport default Textures;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textures\");","map":{"version":3,"names":["React","useFieldArray","CustomDropdown","StyledTexture","TextureItems","Textures","register","index","errors","control","fields","append","remove","name","map","sub_index","id"],"sources":["E:/Kodpit/kodpit/src/Components/Textures.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport CustomDropdown from \"./CustomDropdown\";\r\nimport { StyledTexture } from \"./styles/Texture.styled\";\r\nimport TextureItems from \"./TextureItems\";\r\n\r\nfunction Textures({ register, index, errors, control }) {\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: `products[${index}].textures`,\r\n  });\r\n\r\n  return (\r\n    <StyledTexture>\r\n      <div>\r\n        <div>\r\n          <button type=\"button\" onClick={() => append({})}>\r\n            +\r\n          </button>\r\n        </div>\r\n        {fields.map(({ id }, sub_index) => {\r\n          return (\r\n            <div key={id}>\r\n              <div className=\"\">\r\n                <button type=\"button\" onClick={() => remove(sub_index)}>\r\n                  Sil\r\n                </button>\r\n              </div>\r\n              <TextureItems\r\n                index={index}\r\n                control={control}\r\n                errors={errors}\r\n                sub_index={sub_index}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </StyledTexture>\r\n  );\r\n}\r\nexport default Textures;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,QAAT,OAAwD;EAAA;;EAAA,IAAtC;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,MAAnB;IAA2BC;EAA3B,CAAsC;EACtD,MAAM;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAA6BX,aAAa,CAAC;IAC/CQ,OAD+C;IAE/CI,IAAI,EAAG,YAAWN,KAAM;EAFuB,CAAD,CAAhD;EAKA,oBACE,QAAC,aAAD;IAAA,uBACE;MAAA,wBACE;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAE,MAAMI,MAAM,CAAC,EAAD,CAA3C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,EAMGD,MAAM,CAACI,GAAP,CAAW,QAASC,SAAT,KAAuB;QAAA,IAAtB;UAAEC;QAAF,CAAsB;QACjC,oBACE;UAAA,wBACE;YAAK,SAAS,EAAC,EAAf;YAAA,uBACE;cAAQ,IAAI,EAAC,QAAb;cAAsB,OAAO,EAAE,MAAMJ,MAAM,CAACG,SAAD,CAA3C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAME,QAAC,YAAD;YACE,KAAK,EAAER,KADT;YAEE,OAAO,EAAEE,OAFX;YAGE,MAAM,EAAED,MAHV;YAIE,SAAS,EAAEO;UAJb;YAAA;YAAA;YAAA;UAAA,QANF;QAAA,GAAUC,EAAV;UAAA;UAAA;UAAA;QAAA,QADF;MAeD,CAhBA,CANH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GAlCQX,Q;UAC4BJ,a;;;KAD5BI,Q;AAmCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}