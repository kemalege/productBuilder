{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kodpit\\\\kodpit\\\\src\\\\Components\\\\Textures.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport CustomDropdown from \"./CustomDropdown\";\nimport { StyledTexture } from \"./styles/Texture.styled\";\nimport TextureItems from \"./TextureItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Textures(_ref) {\n  _s();\n\n  let {\n    register,\n    index,\n    errors,\n    control\n  } = _ref;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: `products[${index}].textures`,\n    defaultValues: {\n      [`products[${index}].textures`]: []\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(StyledTexture, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0130\\u015ELEM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"GRUPLAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"DESENLER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"RENKLER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"M\\u0130KTAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), fields.map((field, sub_index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            type: \"button\",\n            onClick: () => remove(sub_index),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextureItems, {\n          selected: fields,\n          index: index,\n          control: control,\n          errors: errors,\n          sub_index: sub_index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-item\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => append({\n          group: '',\n          figure: '',\n          colour: '',\n          quantity: 0\n        }),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Textures, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = Textures;\nexport default Textures;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textures\");","map":{"version":3,"names":["React","useFieldArray","CustomDropdown","StyledTexture","TextureItems","Textures","register","index","errors","control","fields","append","remove","name","defaultValues","map","field","sub_index","id","group","figure","colour","quantity"],"sources":["E:/Kodpit/kodpit/src/Components/Textures.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport CustomDropdown from \"./CustomDropdown\";\r\nimport { StyledTexture } from \"./styles/Texture.styled\";\r\nimport TextureItems from \"./TextureItems\";\r\n\r\nfunction Textures({ register, index, errors, control, }) {\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: `products[${index}].textures`,\r\n    defaultValues: {\r\n      [`products[${index}].textures`]: []\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <StyledTexture>\r\n      <div className=\"header\">\r\n        <div>İŞLEM</div>\r\n        <div>GRUPLAR</div>\r\n        <div>DESENLER</div>\r\n        <div>RENKLER</div>\r\n        <div>MİKTAR</div>\r\n      </div>\r\n      {fields.map((field, sub_index) => {\r\n        return (\r\n          <div className=\"grid-item\" key={field.id}>\r\n            <div>\r\n              <button\r\n                className=\"remove-button\"\r\n                type=\"button\"\r\n                onClick={() => remove(sub_index)}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n            <TextureItems\r\n              selected={fields}\r\n              index={index}\r\n              control={control}\r\n              errors={errors}\r\n              sub_index={sub_index}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"add-item\">\r\n        <button type=\"button\" onClick={() => append({\r\n          group: '',\r\n          figure: '',\r\n          colour: '',\r\n          quantity: 0\r\n        })}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </StyledTexture>\r\n  );\r\n}\r\nexport default Textures;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,QAAT,OAAyD;EAAA;;EAAA,IAAvC;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,MAAnB;IAA2BC;EAA3B,CAAuC;EACvD,MAAM;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,IAA6BX,aAAa,CAAC;IAC/CQ,OAD+C;IAE/CI,IAAI,EAAG,YAAWN,KAAM,YAFuB;IAG/CO,aAAa,EAAE;MACb,CAAE,YAAWP,KAAM,YAAnB,GAAiC;IADpB;EAHgC,CAAD,CAAhD;EAQA,oBACE,QAAC,aAAD;IAAA,wBACE;MAAK,SAAS,EAAC,QAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQGG,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,SAAR,KAAsB;MAChC,oBACE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACE;UAAA,uBACE;YACE,SAAS,EAAC,eADZ;YAEE,IAAI,EAAC,QAFP;YAGE,OAAO,EAAE,MAAML,MAAM,CAACK,SAAD,CAHvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAUE,QAAC,YAAD;UACE,QAAQ,EAAEP,MADZ;UAEE,KAAK,EAAEH,KAFT;UAGE,OAAO,EAAEE,OAHX;UAIE,MAAM,EAAED,MAJV;UAKE,SAAS,EAAES;QALb;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA,GAAgCD,KAAK,CAACE,EAAtC;QAAA;QAAA;QAAA;MAAA,QADF;IAoBD,CArBA,CARH,eA8BE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAE,MAAMP,MAAM,CAAC;UAC1CQ,KAAK,EAAE,EADmC;UAE1CC,MAAM,EAAE,EAFkC;UAG1CC,MAAM,EAAE,EAHkC;UAI1CC,QAAQ,EAAE;QAJgC,CAAD,CAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA9BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD;;GApDQjB,Q;UAC4BJ,a;;;KAD5BI,Q;AAqDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}